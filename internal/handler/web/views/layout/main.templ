package layout

import (
	"github.com/jonashiltl/openchangelog/components"
	"html/template"
)

type MainArgs struct {
	Title       string
	Description string
	CSS         string
	IncludeHTMX bool
}

var inlinceCSSTemplate = template.Must(template.New("inlinceCSSTemplate").Parse(`
<style>
	{{ . }}
</style>
`,
))

templ InlineCSS(css string) {
	@templ.FromGoHTML(inlinceCSSTemplate, template.CSS(css))
}

templ Main(args MainArgs) {
	<html>
		<head>
			<meta charset="utf-8"/>
			<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
			if args.Title != "" {
				<title>{ args.Title }</title>
			}
			if args.Description != "" {
				<meta name="description" content={ args.Description }/>
			}
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<link rel="preload" as="style" href="https://rsms.me/inter/inter.css"/>
			// required for the password protection page
			if args.IncludeHTMX {
				<script src="https://unpkg.com/htmx.org@1.9.12" integrity="sha384-ujb1lZYygJmzgSwoxRggbCHcjc0rB2XoQrxeTUQyRjrOnlCoYta87iKBWq3EsdM2" crossorigin="anonymous"></script>
			}
			if args.CSS != "" {
				@InlineCSS(args.CSS)
			}
		</head>
		<body>
			{ children... }
			@components.ToastContainer()
		</body>
	</html>
}
